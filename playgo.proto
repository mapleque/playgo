syntax = "proto3";

option go_package = "main";

package mapleque.playgo;

service PlaygoService {
    rpc Operation(stream OperationRequest) returns (stream FrameResponse);
}

enum Cmd {
    NOTHING     = 0; // do nothing for heart beat
    CREATE      = 1; // create a new set
    PUT         = 2; // put a chess(or empty) on the board
    PASS        = 3; // pass this round
    GIVEUP      = 4; // give up the game
    BACK        = 5; // rollback a move
}

enum Turn {
    EMPTY = 0;
    BLACK = 1;
    WHITE = 2;
}

message Chess {
    int64 lon = 1;
    int64 lat = 2;
    Turn who = 3;
}

message OperationRequest {
    string token = 1;
    Cmd cmd = 2;
    Chess chess = 3;
}



message Frame {
    string token = 1;
    repeated Chess chesses = 2; // current chesses on the board
    repeated Chess steps = 3; // history steps on the board
    Turn next = 4; // who will do the next operation
    Turn giveup = 5; // who giveup
    Turn pass = 6; // who pass
}

message FrameResponse {
    enum Code {
        SUCCESS = 0;
        UNKNOW = 1;
    }
    Code code = 1;
    string tips = 2;
    Frame frame = 3;
}
